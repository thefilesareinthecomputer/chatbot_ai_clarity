[[package]]
name = "absl-py"
version = "1.4.0"
description = "Abseil Python Common Libraries, see https://github.com/abseil/abseil-py."
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "aiohttp"
version = "3.8.3"
description = "Async http client/server framework (asyncio)"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
aiosignal = ">=1.1.2"
async-timeout = ">=4.0.0a3,<5.0"
attrs = ">=17.3.0"
charset-normalizer = ">=2.0,<3.0"
frozenlist = ">=1.1.1"
multidict = ">=4.5,<7.0"
yarl = ">=1.0,<2.0"

[package.extras]
speedups = ["aiodns", "brotli", "cchardet"]

[[package]]
name = "aiosignal"
version = "1.3.1"
description = "aiosignal: a list of registered asynchronous callbacks"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
frozenlist = ">=1.1.0"

[[package]]
name = "astunparse"
version = "1.6.3"
description = "An AST unparser for Python"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
six = ">=1.6.1,<2.0"

[[package]]
name = "async-timeout"
version = "4.0.2"
description = "Timeout context manager for asyncio programs"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "attrs"
version = "22.2.0"
description = "Classes Without Boilerplate"
category = "main"
optional = false
python-versions = ">=3.6"

[package.extras]
cov = ["attrs", "coverage-enable-subprocess", "coverage[toml] (>=5.3)"]
dev = ["attrs"]
docs = ["furo", "sphinx", "myst-parser", "zope.interface", "sphinx-notfound-page", "sphinxcontrib-towncrier", "towncrier"]
tests = ["attrs", "zope.interface"]
tests-no-zope = ["hypothesis", "pympler", "pytest (>=4.3.0)", "pytest-xdist", "cloudpickle", "mypy (>=0.971,<0.990)", "pytest-mypy-plugins"]
tests_no_zope = ["hypothesis", "pympler", "pytest (>=4.3.0)", "pytest-xdist", "cloudpickle", "mypy (>=0.971,<0.990)", "pytest-mypy-plugins"]

[[package]]
name = "cachetools"
version = "5.3.0"
description = "Extensible memoizing collections and decorators"
category = "main"
optional = false
python-versions = "~=3.7"

[[package]]
name = "certifi"
version = "2022.12.7"
description = "Python package for providing Mozilla's CA Bundle."
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "charset-normalizer"
version = "2.1.1"
description = "The Real First Universal Charset Detector. Open, modern and actively maintained alternative to Chardet."
category = "main"
optional = false
python-versions = ">=3.6.0"

[package.extras]
unicode_backport = ["unicodedata2"]

[[package]]
name = "click"
version = "8.1.3"
description = "Composable command line interface toolkit"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
colorama = {version = "*", markers = "platform_system == \"Windows\""}

[[package]]
name = "colorama"
version = "0.4.6"
description = "Cross-platform colored terminal text."
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*,>=2.7"

[[package]]
name = "contourpy"
version = "1.0.7"
description = "Python library for calculating contours of 2D quadrilateral grids"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
numpy = ">=1.16"

[package.extras]
bokeh = ["bokeh", "chromedriver", "selenium"]
docs = ["furo", "sphinx-copybutton"]
mypy = ["contourpy", "docutils-stubs", "mypy (==0.991)", "types-pillow"]
test = ["matplotlib", "pillow", "pytest"]
test-no-images = ["pytest"]

[[package]]
name = "cycler"
version = "0.11.0"
description = "Composable style cycles"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "debugpy"
version = "1.6.5"
description = "An implementation of the Debug Adapter Protocol for Python"
category = "dev"
optional = false
python-versions = ">=3.7"

[[package]]
name = "dill"
version = "0.3.6"
description = "serialize all of python"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
graph = ["objgraph (>=1.7.2)"]

[[package]]
name = "dm-tree"
version = "0.1.8"
description = "Tree is a library for working with nested data structures."
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "et-xmlfile"
version = "1.1.0"
description = "An implementation of lxml.xmlfile for the standard library"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "etils"
version = "1.0.0"
description = "Collection of common python utils"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
etils = {version = "*", extras = ["epy"], optional = true, markers = "extra == \"enp\""}
importlib_resources = {version = "*", optional = true, markers = "extra == \"epath\""}
numpy = {version = "*", optional = true, markers = "extra == \"enp\""}
typing_extensions = {version = "*", optional = true, markers = "extra == \"epath\""}
zipp = {version = "*", optional = true, markers = "extra == \"epath\""}

[package.extras]
all = ["etils", "etils", "etils", "etils", "etils", "etils", "etils", "etils", "etils", "etils", "etils", "etils"]
array-types = ["etils"]
dev = ["pytest", "pytest-subtests", "pytest-xdist", "pylint (>=2.6.0)", "yapf", "chex"]
eapp = ["absl-py", "simple-parsing", "etils"]
ecolab = ["jupyter", "numpy", "mediapy", "etils", "etils"]
edc = ["typing-extensions", "etils"]
enp = ["numpy", "etils"]
epath = ["importlib-resources", "typing-extensions", "zipp", "etils"]
epy = ["typing-extensions"]
etqdm = ["absl-py", "tqdm", "etils"]
etree = ["etils", "etils", "etils", "etils"]
etree-dm = ["dm-tree", "etils"]
etree-jax = ["jax", "etils"]
etree-tf = ["tensorflow", "etils"]
lazy-imports = ["etils"]

[[package]]
name = "flask"
version = "2.2.2"
description = "A simple framework for building complex web applications."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
click = ">=8.0"
itsdangerous = ">=2.0"
Jinja2 = ">=3.0"
Werkzeug = ">=2.2.2"

[package.extras]
async = ["asgiref (>=3.2)"]
dotenv = ["python-dotenv"]

[[package]]
name = "flatbuffers"
version = "23.1.21"
description = "The FlatBuffers serialization format for Python"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "fonttools"
version = "4.38.0"
description = "Tools to manipulate font files"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
all = ["fs (>=2.2.0,<3)", "lxml (>=4.0,<5)", "zopfli (>=0.1.4)", "lz4 (>=1.7.4.2)", "matplotlib", "sympy", "skia-pathops (>=0.5.0)", "uharfbuzz (>=0.23.0)", "brotlicffi (>=0.8.0)", "scipy", "brotli (>=1.0.1)", "munkres", "unicodedata2 (>=14.0.0)", "xattr"]
graphite = ["lz4 (>=1.7.4.2)"]
interpolatable = ["scipy", "munkres"]
lxml = ["lxml (>=4.0,<5)"]
pathops = ["skia-pathops (>=0.5.0)"]
plot = ["matplotlib"]
repacker = ["uharfbuzz (>=0.23.0)"]
symfont = ["sympy"]
type1 = ["xattr"]
ufo = ["fs (>=2.2.0,<3)"]
unicode = ["unicodedata2 (>=14.0.0)"]
woff = ["zopfli (>=0.1.4)", "brotlicffi (>=0.8.0)", "brotli (>=1.0.1)"]

[[package]]
name = "frozenlist"
version = "1.3.3"
description = "A list-like structure which implements collections.abc.MutableSequence"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "gast"
version = "0.4.0"
description = "Python AST that abstracts the underlying Python version"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "google-auth"
version = "2.16.0"
description = "Google Authentication Library"
category = "main"
optional = false
python-versions = ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*"

[package.dependencies]
cachetools = ">=2.0.0,<6.0"
pyasn1-modules = ">=0.2.1"
rsa = {version = ">=3.1.4,<5", markers = "python_version >= \"3.6\""}
six = ">=1.9.0"

[package.extras]
aiohttp = ["requests (>=2.20.0,<3.0.0dev)", "aiohttp (>=3.6.2,<4.0.0dev)"]
enterprise_cert = ["cryptography (==36.0.2)", "pyopenssl (==22.0.0)"]
pyopenssl = ["pyopenssl (>=20.0.0)", "cryptography (>=38.0.3)"]
reauth = ["pyu2f (>=0.1.5)"]
requests = ["requests (>=2.20.0,<3.0.0dev)"]

[[package]]
name = "google-auth-oauthlib"
version = "0.4.6"
description = "Google Authentication Library"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
google-auth = ">=1.0.0"
requests-oauthlib = ">=0.7.0"

[package.extras]
tool = ["click (>=6.0.0)"]

[[package]]
name = "google-pasta"
version = "0.2.0"
description = "pasta is an AST-based Python refactoring library"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
six = "*"

[[package]]
name = "googleapis-common-protos"
version = "1.58.0"
description = "Common protobufs used in Google APIs"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
protobuf = ">=3.19.5,<3.20.0 || >3.20.0,<3.20.1 || >3.20.1,<4.21.1 || >4.21.1,<4.21.2 || >4.21.2,<4.21.3 || >4.21.3,<4.21.4 || >4.21.4,<4.21.5 || >4.21.5,<5.0.0dev"

[package.extras]
grpc = ["grpcio (>=1.44.0,<2.0.0dev)"]

[[package]]
name = "grpcio"
version = "1.52.0"
description = "HTTP/2-based RPC framework"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
protobuf = ["grpcio-tools (>=1.52.0)"]

[[package]]
name = "h5py"
version = "3.8.0"
description = "Read and write HDF5 files from Python"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
numpy = ">=1.14.5"

[[package]]
name = "idna"
version = "3.4"
description = "Internationalized Domain Names in Applications (IDNA)"
category = "main"
optional = false
python-versions = ">=3.5"

[[package]]
name = "importlib-resources"
version = "5.10.2"
description = "Read resources from Python packages"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
docs = ["sphinx (>=3.5)", "jaraco.packaging (>=9)", "rst.linker (>=1.9)", "furo", "sphinx-lint", "jaraco.tidelift (>=1.4)"]
testing = ["pytest (>=6)", "pytest-checkdocs (>=2.4)", "flake8 (<5)", "pytest-cov", "pytest-enabler (>=1.3)", "pytest-black (>=0.3.7)", "pytest-mypy (>=0.9.1)", "pytest-flake8"]

[[package]]
name = "itsdangerous"
version = "2.1.2"
description = "Safely pass data to untrusted environments and back."
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "jedi"
version = "0.18.2"
description = "An autocompletion tool for Python that can be used for text editors."
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
parso = ">=0.8.0,<0.9.0"

[package.extras]
docs = ["Jinja2 (==2.11.3)", "MarkupSafe (==1.1.1)", "Pygments (==2.8.1)", "alabaster (==0.7.12)", "babel (==2.9.1)", "chardet (==4.0.0)", "commonmark (==0.8.1)", "docutils (==0.17.1)", "future (==0.18.2)", "idna (==2.10)", "imagesize (==1.2.0)", "mock (==1.0.1)", "packaging (==20.9)", "pyparsing (==2.4.7)", "pytz (==2021.1)", "readthedocs-sphinx-ext (==2.1.4)", "recommonmark (==0.5.0)", "requests (==2.25.1)", "six (==1.15.0)", "snowballstemmer (==2.1.0)", "sphinx-rtd-theme (==0.4.3)", "sphinx (==1.8.5)", "sphinxcontrib-serializinghtml (==1.1.4)", "sphinxcontrib-websupport (==1.2.4)", "urllib3 (==1.26.4)"]
qa = ["flake8 (==3.8.3)", "mypy (==0.782)"]
testing = ["Django (<3.1)", "attrs", "colorama", "docopt", "pytest (<7.0.0)"]

[[package]]
name = "jinja2"
version = "3.1.2"
description = "A very fast and expressive template engine."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
MarkupSafe = ">=2.0"

[package.extras]
i18n = ["Babel (>=2.7)"]

[[package]]
name = "joblib"
version = "1.2.0"
description = "Lightweight pipelining with Python functions"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "keras"
version = "2.11.0"
description = "Deep learning for humans."
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "kiwisolver"
version = "1.4.4"
description = "A fast implementation of the Cassowary constraint solver"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "libclang"
version = "15.0.6.1"
description = "Clang Python Bindings, mirrored from the official LLVM repo: https://github.com/llvm/llvm-project/tree/main/clang/bindings/python, to make the installation process easier."
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "markdown"
version = "3.4.1"
description = "Python implementation of Markdown."
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
testing = ["coverage", "pyyaml"]

[[package]]
name = "markupsafe"
version = "2.1.2"
description = "Safely add untrusted strings to HTML/XML markup."
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "matplotlib"
version = "3.6.3"
description = "Python plotting package"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
contourpy = ">=1.0.1"
cycler = ">=0.10"
fonttools = ">=4.22.0"
kiwisolver = ">=1.0.1"
numpy = ">=1.19"
packaging = ">=20.0"
pillow = ">=6.2.0"
pyparsing = ">=2.2.1"
python-dateutil = ">=2.7"

[[package]]
name = "multidict"
version = "6.0.4"
description = "multidict implementation"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "nltk"
version = "3.8.1"
description = "Natural Language Toolkit"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
click = "*"
joblib = "*"
regex = ">=2021.8.3"
tqdm = "*"

[package.extras]
all = ["scikit-learn", "python-crfsuite", "requests", "numpy", "pyparsing", "twython", "scipy", "matplotlib"]
corenlp = ["requests"]
machine_learning = ["numpy", "python-crfsuite", "scikit-learn", "scipy"]
plot = ["matplotlib"]
tgrep = ["pyparsing"]
twitter = ["twython"]

[[package]]
name = "numpy"
version = "1.24.1"
description = "Fundamental package for array computing in Python"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "oauthlib"
version = "3.2.2"
description = "A generic, spec-compliant, thorough implementation of the OAuth request-signing logic"
category = "main"
optional = false
python-versions = ">=3.6"

[package.extras]
rsa = ["cryptography (>=3.0.0)"]
signals = ["blinker (>=1.4.0)"]
signedtoken = ["cryptography (>=3.0.0)", "pyjwt (>=2.0.0,<3)"]

[[package]]
name = "openpyxl"
version = "3.1.0"
description = "A Python library to read/write Excel 2010 xlsx/xlsm files"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
et-xmlfile = "*"

[[package]]
name = "opt-einsum"
version = "3.3.0"
description = "Optimizing numpys einsum function"
category = "main"
optional = false
python-versions = ">=3.5"

[package.dependencies]
numpy = ">=1.7"

[package.extras]
docs = ["sphinx (==1.2.3)", "sphinxcontrib-napoleon", "sphinx-rtd-theme", "numpydoc"]
tests = ["pytest", "pytest-cov", "pytest-pep8"]

[[package]]
name = "packaging"
version = "23.0"
description = "Core utilities for Python packages"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "pandas"
version = "1.5.3"
description = "Powerful data structures for data analysis, time series, and statistics"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
numpy = {version = ">=1.21.0", markers = "python_version >= \"3.10\""}
python-dateutil = ">=2.8.1"
pytz = ">=2020.1"

[package.extras]
test = ["hypothesis (>=5.5.3)", "pytest (>=6.0)", "pytest-xdist (>=1.31)"]

[[package]]
name = "parso"
version = "0.8.3"
description = "A Python Parser"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.extras]
qa = ["flake8 (==3.8.3)", "mypy (==0.782)"]
testing = ["docopt", "pytest (<6.0.0)"]

[[package]]
name = "pillow"
version = "9.4.0"
description = "Python Imaging Library (Fork)"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
docs = ["furo", "olefile", "sphinx (>=2.4)", "sphinx-copybutton", "sphinx-inline-tabs", "sphinx-issues (>=3.0.1)", "sphinx-removed-in", "sphinxext-opengraph"]
tests = ["check-manifest", "coverage", "defusedxml", "markdown2", "olefile", "packaging", "pyroma", "pytest", "pytest-cov", "pytest-timeout"]

[[package]]
name = "platformdirs"
version = "2.6.2"
description = "A small Python package for determining appropriate platform-specific dirs, e.g. a \"user data dir\"."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.extras]
docs = ["furo (>=2022.12.7)", "proselint (>=0.13)", "sphinx-autodoc-typehints (>=1.19.5)", "sphinx (>=5.3)"]
test = ["appdirs (==1.4.4)", "covdefaults (>=2.2.2)", "pytest-cov (>=4)", "pytest-mock (>=3.10)", "pytest (>=7.2)"]

[[package]]
name = "plotly"
version = "5.13.0"
description = "An open-source, interactive data visualization library for Python"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
tenacity = ">=6.2.0"

[[package]]
name = "pluggy"
version = "1.0.0"
description = "plugin and hook calling mechanisms for python"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.extras]
testing = ["pytest-benchmark", "pytest"]
dev = ["tox", "pre-commit"]

[[package]]
name = "promise"
version = "2.3"
description = "Promises/A+ implementation for Python"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
six = "*"

[package.extras]
test = ["pytest (>=2.7.3)", "pytest-cov", "coveralls", "futures", "pytest-benchmark", "mock"]

[[package]]
name = "protobuf"
version = "3.19.6"
description = "Protocol Buffers"
category = "main"
optional = false
python-versions = ">=3.5"

[[package]]
name = "psutil"
version = "5.9.4"
description = "Cross-platform lib for process and system monitoring in Python."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[package.extras]
test = ["ipaddress", "mock", "enum34", "pywin32", "wmi"]

[[package]]
name = "pyasn1"
version = "0.4.8"
description = "ASN.1 types and codecs"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pyasn1-modules"
version = "0.2.8"
description = "A collection of ASN.1-based protocols modules."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
pyasn1 = ">=0.4.6,<0.5.0"

[[package]]
name = "pyflakes"
version = "2.5.0"
description = "passive checker of Python programs"
category = "dev"
optional = false
python-versions = ">=3.6"

[[package]]
name = "pyparsing"
version = "3.0.9"
description = "pyparsing module - Classes and methods to define and execute parsing grammars"
category = "main"
optional = false
python-versions = ">=3.6.8"

[package.extras]
diagrams = ["railroad-diagrams", "jinja2"]

[[package]]
name = "python-dateutil"
version = "2.8.2"
description = "Extensions to the standard Python datetime module"
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,>=2.7"

[package.dependencies]
six = ">=1.5"

[[package]]
name = "python-lsp-jsonrpc"
version = "1.0.0"
description = "JSON RPC 2.0 server library"
category = "dev"
optional = false
python-versions = "*"

[package.dependencies]
ujson = ">=3.0.0"

[package.extras]
test = ["coverage", "pytest-cov", "pytest", "pyflakes", "pycodestyle", "pylint"]

[[package]]
name = "pytoolconfig"
version = "1.2.5"
description = "Python tool configuration"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
packaging = ">=22.0"
platformdirs = {version = ">=1.4.4", optional = true, markers = "extra == \"global\""}
tomli = {version = ">=2.0.1", markers = "python_version < \"3.11\""}

[package.extras]
doc = ["tabulate (>=0.8.9)", "sphinx (>=4.5.0)"]
gendocs = ["sphinx (>=4.5.0)", "sphinx-autodoc-typehints (>=1.18.1)", "sphinx-rtd-theme (>=1.0.0)", "pytoolconfig"]
global = ["platformdirs (>=1.4.4)"]
validation = ["pydantic (>=1.7.4)"]

[[package]]
name = "pytz"
version = "2022.7.1"
description = "World timezone definitions, modern and historical"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "regex"
version = "2022.10.31"
description = "Alternative regular expression module, to replace re."
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "replit"
version = "3.2.4"
description = "A library for interacting with features of repl.it"
category = "main"
optional = false
python-versions = ">=3.8,<4.0"

[package.dependencies]
aiohttp = ">=3.6.2,<4.0.0"
Flask = ">=2.0.0,<3.0.0"
requests = ">=2.25.1,<3.0.0"
typing_extensions = ">=3.7.4,<4.0.0"
Werkzeug = ">=2.0.0,<3.0.0"

[[package]]
name = "replit-python-lsp-server"
version = "1.15.9"
description = "Python Language Server for the Language Server Protocol"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
jedi = ">=0.17.2,<0.19.0"
pluggy = ">=1.0.0"
pyflakes = {version = ">=2.5.0,<2.6.0", optional = true, markers = "extra == \"pyflakes\""}
python-lsp-jsonrpc = ">=1.0.0"
rope = {version = ">0.10.5", optional = true, markers = "extra == \"rope\""}
toml = ">=0.10.2"
ujson = ">=3.0.0"
whatthepatch = {version = ">=1.0.2,<2.0.0", optional = true, markers = "extra == \"yapf\""}
yapf = {version = "*", optional = true, markers = "extra == \"yapf\""}

[package.extras]
all = ["autopep8 (>=1.6.0,<1.7.0)", "flake8 (>=5.0.0,<5.1.0)", "mccabe (>=0.7.0,<0.8.0)", "pycodestyle (>=2.9.0,<2.10.0)", "pydocstyle (>=2.0.0)", "pyflakes (>=2.5.0,<2.6.0)", "pylint (>=2.5.0)", "rope (>=0.10.5)", "yapf", "whatthepatch"]
autopep8 = ["autopep8 (>=1.6.0,<1.7.0)"]
flake8 = ["flake8 (>=5.0.0,<5.1.0)"]
mccabe = ["mccabe (>=0.7.0,<0.8.0)"]
pycodestyle = ["pycodestyle (>=2.9.0,<2.10.0)"]
pydocstyle = ["pydocstyle (>=2.0.0)"]
pyflakes = ["pyflakes (>=2.5.0,<2.6.0)"]
pylint = ["pylint (>=2.5.0)"]
rope = ["rope (>0.10.5)"]
test = ["pylint (>=2.5.0)", "pytest", "pytest-cov", "coverage", "numpy (<1.23)", "pandas", "matplotlib", "pyqt5", "flaky"]
websockets = ["websockets (>=10.3)"]
yapf = ["yapf", "whatthepatch (>=1.0.2,<2.0.0)"]

[[package]]
name = "requests"
version = "2.28.2"
description = "Python HTTP for Humans."
category = "main"
optional = false
python-versions = ">=3.7, <4"

[package.dependencies]
certifi = ">=2017.4.17"
charset-normalizer = ">=2,<4"
idna = ">=2.5,<4"
urllib3 = ">=1.21.1,<1.27"

[package.extras]
socks = ["PySocks (>=1.5.6,!=1.5.7)"]
use_chardet_on_py3 = ["chardet (>=3.0.2,<6)"]

[[package]]
name = "requests-oauthlib"
version = "1.3.1"
description = "OAuthlib authentication support for Requests."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[package.dependencies]
oauthlib = ">=3.0.0"
requests = ">=2.0.0"

[package.extras]
rsa = ["oauthlib[signedtoken] (>=3.0.0)"]

[[package]]
name = "rope"
version = "1.7.0"
description = "a python refactoring library..."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
pytoolconfig = {version = ">=1.2.2", extras = ["global"]}

[package.extras]
dev = ["pytest (>=7.0.1)", "pytest-timeout (>=2.1.0)", "build (>=0.7.0)", "pre-commit (>=2.20.0)"]
doc = ["pytoolconfig", "sphinx (>=4.5.0)", "sphinx-autodoc-typehints (>=1.18.1)", "sphinx-rtd-theme (>=1.0.0)"]

[[package]]
name = "rsa"
version = "4.9"
description = "Pure-Python RSA implementation"
category = "main"
optional = false
python-versions = ">=3.6,<4"

[package.dependencies]
pyasn1 = ">=0.1.3"

[[package]]
name = "seaborn"
version = "0.12.2"
description = "Statistical data visualization"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
matplotlib = ">=3.1,<3.6.1 || >3.6.1"
numpy = ">=1.17,<1.24.0 || >1.24.0"
pandas = ">=0.25"

[package.extras]
dev = ["pytest", "pytest-cov", "pytest-xdist", "flake8", "mypy", "pandas-stubs", "pre-commit", "flit"]
docs = ["numpydoc", "nbconvert", "ipykernel", "sphinx-copybutton", "sphinx-issues", "sphinx-design", "pyyaml", "pydata_sphinx_theme (==0.10.0rc2)"]
stats = ["scipy (>=1.3)", "statsmodels (>=0.10)"]

[[package]]
name = "six"
version = "1.16.0"
description = "Python 2 and 3 compatibility utilities"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "tenacity"
version = "8.2.0"
description = "Retry code until it succeeds"
category = "main"
optional = false
python-versions = ">=3.6"

[package.extras]
doc = ["reno", "sphinx", "tornado (>=4.5)"]

[[package]]
name = "tensorboard"
version = "2.11.2"
description = "TensorBoard lets you watch Tensors Flow"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
absl-py = ">=0.4"
google-auth = ">=1.6.3,<3"
google-auth-oauthlib = ">=0.4.1,<0.5"
grpcio = ">=1.24.3"
markdown = ">=2.6.8"
numpy = ">=1.12.0"
protobuf = ">=3.9.2,<4"
requests = ">=2.21.0,<3"
tensorboard-data-server = ">=0.6.0,<0.7.0"
tensorboard-plugin-wit = ">=1.6.0"
werkzeug = ">=1.0.1"

[[package]]
name = "tensorboard-data-server"
version = "0.6.1"
description = "Fast data loading for TensorBoard"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "tensorboard-plugin-wit"
version = "1.8.1"
description = "What-If Tool TensorBoard plugin."
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "tensorflow"
version = "2.11.0"
description = "TensorFlow is an open source machine learning framework for everyone."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
absl-py = ">=1.0.0"
astunparse = ">=1.6.0"
flatbuffers = ">=2.0"
gast = ">=0.2.1,<=0.4.0"
google-pasta = ">=0.1.1"
grpcio = ">=1.24.3,<2.0"
h5py = ">=2.9.0"
keras = ">=2.11.0,<2.12"
libclang = ">=13.0.0"
numpy = ">=1.20"
opt-einsum = ">=2.3.2"
packaging = "*"
protobuf = ">=3.9.2,<3.20"
six = ">=1.12.0"
tensorboard = ">=2.11,<2.12"
tensorflow-estimator = ">=2.11.0,<2.12"
tensorflow-io-gcs-filesystem = {version = ">=0.23.1", markers = "platform_machine != \"arm64\" or platform_system != \"Darwin\""}
termcolor = ">=1.1.0"
typing-extensions = ">=3.6.6"
wrapt = ">=1.11.0"

[[package]]
name = "tensorflow-datasets"
version = "4.8.2"
description = "tensorflow/datasets is a library of datasets ready to use with TensorFlow."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
absl-py = "*"
click = "*"
dill = "*"
dm-tree = "*"
etils = {version = ">=0.9.0", extras = ["enp", "epath"]}
numpy = "*"
promise = "*"
protobuf = ">=3.12.2"
psutil = "*"
requests = ">=2.19.0"
tensorflow-metadata = "*"
termcolor = "*"
toml = "*"
tqdm = "*"
wrapt = "*"

[package.extras]
aflw2k3d = ["scipy"]
beir = ["apache-beam"]
ble_wind_field = ["gcsfs", "zarr"]
c4 = ["apache-beam", "gcld3", "langdetect", "nltk", "tldextract"]
c4_wsrs = ["apache-beam"]
cats_vs_dogs = ["matplotlib"]
colorectal_histology = ["pillow"]
common_voice = ["pydub"]
dev = ["jax", "jupyter", "pytest", "pytest-shard", "pytest-xdist", "pandas", "pydub", "apache-beam", "conllu", "pyyaml", "tensorflow-io", "datasets", "pylint (>=2.6.0)", "yapf"]
duke_ultrasound = ["scipy"]
eurosat = ["scikit-image", "tifffile", "imagecodecs"]
groove = ["pretty-midi", "pydub"]
gtzan = ["pydub"]
imagenet2012_corrupted = ["opencv-python", "scikit-image", "scipy"]
librispeech = ["pydub"]
lsun = ["tensorflow-io"]
matplotlib = ["matplotlib"]
nsynth = ["crepe (>=0.0.11)", "librosa", "scikit-learn (==0.20.3)"]
ogbg_molpcba = ["pandas", "networkx"]
pet_finder = ["pandas"]
robonet = ["h5py"]
robosuite_panda_pick_place_can = ["envlogger"]
smartwatch_gestures = ["pandas"]
svhn = ["scipy"]
tensorflow = ["tensorflow (>=2.1)"]
tensorflow-data-validation = ["tensorflow-data-validation"]
tests-all = ["jax", "jupyter", "pytest", "pytest-shard", "pytest-xdist", "pandas", "pydub", "apache-beam", "conllu", "pyyaml", "tensorflow-io", "datasets", "scipy", "gcsfs", "zarr", "gcld3", "langdetect", "nltk", "tldextract", "matplotlib", "pillow", "scikit-image", "tifffile", "imagecodecs", "pretty-midi", "opencv-python", "networkx", "h5py", "envlogger", "mwparserfromhell", "bs4", "lxml", "pycocotools"]
the300w_lp = ["scipy"]
wider_face = ["pillow"]
wiki_dialog = ["apache-beam"]
wikipedia = ["mwparserfromhell", "apache-beam"]
wsc273 = ["bs4", "lxml"]
youtube_vis = ["pycocotools"]

[[package]]
name = "tensorflow-estimator"
version = "2.11.0"
description = "TensorFlow Estimator."
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "tensorflow-io-gcs-filesystem"
version = "0.30.0"
description = "TensorFlow IO"
category = "main"
optional = false
python-versions = ">=3.7, <3.12"

[package.extras]
tensorflow = ["tensorflow (>=2.11.0,<2.12.0)"]
tensorflow-aarch64 = ["tensorflow-aarch64 (>=2.11.0,<2.12.0)"]
tensorflow-cpu = ["tensorflow-cpu (>=2.11.0,<2.12.0)"]
tensorflow-gpu = ["tensorflow-gpu (>=2.11.0,<2.12.0)"]
tensorflow-rocm = ["tensorflow-rocm (>=2.11.0,<2.12.0)"]

[[package]]
name = "tensorflow-metadata"
version = "1.12.0"
description = "Library and standards for schema and statistics."
category = "main"
optional = false
python-versions = ">=3.7,<4"

[package.dependencies]
absl-py = ">=0.9,<2.0.0"
googleapis-common-protos = ">=1.52.0,<2"
protobuf = ">=3.13,<4"

[[package]]
name = "termcolor"
version = "2.2.0"
description = "ANSI color formatting for output in terminal"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
tests = ["pytest", "pytest-cov"]

[[package]]
name = "toml"
version = "0.10.2"
description = "Python Library for Tom's Obvious, Minimal Language"
category = "main"
optional = false
python-versions = ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "tomli"
version = "2.0.1"
description = "A lil' TOML parser"
category = "dev"
optional = false
python-versions = ">=3.7"

[[package]]
name = "tqdm"
version = "4.64.1"
description = "Fast, Extensible Progress Meter"
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,>=2.7"

[package.dependencies]
colorama = {version = "*", markers = "platform_system == \"Windows\""}

[package.extras]
dev = ["py-make (>=0.1.0)", "twine", "wheel"]
notebook = ["ipywidgets (>=6)"]
slack = ["slack-sdk"]
telegram = ["requests"]

[[package]]
name = "typing-extensions"
version = "3.10.0.2"
description = "Backported and Experimental Type Hints for Python 3.5+"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "ujson"
version = "5.7.0"
description = "Ultra fast JSON encoder and decoder for Python"
category = "dev"
optional = false
python-versions = ">=3.7"

[[package]]
name = "urllib3"
version = "1.26.14"
description = "HTTP library with thread-safe connection pooling, file post, and more."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*"

[package.extras]
brotli = ["brotlicffi (>=0.8.0)", "brotli (>=1.0.9)", "brotlipy (>=0.6.0)"]
secure = ["pyOpenSSL (>=0.14)", "cryptography (>=1.3.4)", "idna (>=2.0.0)", "certifi", "urllib3-secure-extra", "ipaddress"]
socks = ["PySocks (>=1.5.6,!=1.5.7,<2.0)"]

[[package]]
name = "werkzeug"
version = "2.2.2"
description = "The comprehensive WSGI web application library."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
MarkupSafe = ">=2.1.1"

[package.extras]
watchdog = ["watchdog"]

[[package]]
name = "whatthepatch"
version = "1.0.3"
description = "A patch parsing and application library."
category = "dev"
optional = false
python-versions = ">=3.7"

[[package]]
name = "wrapt"
version = "1.14.1"
description = "Module for decorators, wrappers and monkey patching."
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,>=2.7"

[[package]]
name = "yapf"
version = "0.32.0"
description = "A formatter for Python code."
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "yarl"
version = "1.8.2"
description = "Yet another URL library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
idna = ">=2.0"
multidict = ">=4.0"

[[package]]
name = "zipp"
version = "3.11.0"
description = "Backport of pathlib-compatible object wrapper for zip files"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
docs = ["sphinx (>=3.5)", "jaraco.packaging (>=9)", "rst.linker (>=1.9)", "furo", "jaraco.tidelift (>=1.4)"]
testing = ["pytest (>=6)", "pytest-checkdocs (>=2.4)", "flake8 (<5)", "pytest-cov", "pytest-enabler (>=1.3)", "jaraco.itertools", "func-timeout", "jaraco.functools", "more-itertools", "pytest-black (>=0.3.7)", "pytest-mypy (>=0.9.1)", "pytest-flake8"]

[metadata]
lock-version = "1.1"
python-versions = ">=3.10.0,<3.11"
content-hash = "b3ef9db35992f3250f0bd2579ed98eece73d71efd4afae489c8faa385965d8ac"

[metadata.files]
absl-py = []
aiohttp = []
aiosignal = []
astunparse = []
async-timeout = []
attrs = []
cachetools = []
certifi = []
charset-normalizer = []
click = []
colorama = []
contourpy = []
cycler = []
debugpy = []
dill = []
dm-tree = []
et-xmlfile = []
etils = []
flask = []
flatbuffers = []
fonttools = []
frozenlist = []
gast = []
google-auth = []
google-auth-oauthlib = []
google-pasta = []
googleapis-common-protos = []
grpcio = []
h5py = []
idna = []
importlib-resources = []
itsdangerous = []
jedi = []
jinja2 = []
joblib = []
keras = []
kiwisolver = []
libclang = []
markdown = []
markupsafe = []
matplotlib = []
multidict = []
nltk = []
numpy = []
oauthlib = []
openpyxl = []
opt-einsum = []
packaging = []
pandas = []
parso = []
pillow = []
platformdirs = []
plotly = []
pluggy = []
promise = []
protobuf = []
psutil = []
pyasn1 = []
pyasn1-modules = []
pyflakes = []
pyparsing = []
python-dateutil = []
python-lsp-jsonrpc = []
pytoolconfig = []
pytz = []
regex = []
replit = []
replit-python-lsp-server = []
requests = []
requests-oauthlib = []
rope = []
rsa = []
seaborn = []
six = []
tenacity = []
tensorboard = []
tensorboard-data-server = []
tensorboard-plugin-wit = []
tensorflow = []
tensorflow-datasets = []
tensorflow-estimator = []
tensorflow-io-gcs-filesystem = []
tensorflow-metadata = []
termcolor = []
toml = []
tomli = []
tqdm = []
typing-extensions = []
ujson = []
urllib3 = []
werkzeug = []
whatthepatch = []
wrapt = []
yapf = []
yarl = []
zipp = []
